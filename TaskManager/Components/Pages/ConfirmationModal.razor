<div class="confirmation-overlay" style="display: @(IsVisible ? "block" : "none");">
    <div class="confirmation-dialog">
        <h5>Are you sure you want to delete this task?</h5>
        <div>
            <button class="btn btn-secondary" @onclick="HandleCancel">Cancel</button>
            <button class="btn btn-danger" @onclick="HandleConfirm">Delete</button>
        </div>
    </div>
</div>

<style>
    .confirmation-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: rgba(0, 0, 0, 0.5);
        display: none;
        justify-content: center;
        align-items: center;
        z-index: 1050; /* Ensure it appears on top */
    }

    .confirmation-dialog {
        background-color: white;
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.3);
        text-align: center;
    }

        .confirmation-dialog button {
            margin: 5px;
        }
</style>

@code {
    [Parameter] public EventCallback<bool> OnConfirm { get; set; }
    [Parameter] public EventCallback OnCancel { get; set; }

    [Parameter] public bool IsVisible { get; set; } = false;
    private int TaskIdToDelete { get; set; }

    public void Show(int taskId)
    {
        TaskIdToDelete = taskId;
        IsVisible = true;
        StateHasChanged();
    }

    private void Close()
    {
        IsVisible = false;
        StateHasChanged();
        OnCancel.InvokeAsync();
    }

    private async Task HandleConfirm()
    {
        IsVisible = false;
        await OnConfirm.InvokeAsync(true);
    }

    private void HandleCancel()
    {
        IsVisible = false;
        OnCancel.InvokeAsync();
    }
}
